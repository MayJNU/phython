# -*- coding: utf-8 -*-
"""감귤.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1quMwvzIjec47avrv-vIC6kVbffF8QnAk
"""

import numpy as np
import pandas as pd
import statsmodels.api as sm

cjtreg1 = pd.read_csv('/content/drive/MyDrive/DB/감귤DB.csv')

cjtreg1

results = []
for id_ in cjtreg1['ID'].unique():
    cjtreg1_id = cjtreg1[cjtreg1['ID'] == id_]
    X = sm.add_constant(cjtreg1_id[['weight_5kg', 'weight_10kg','size_small', 'size_middle',  'size_royal', 'usage_gift', 'price_13000', 'price_16000', 'price_26000']])
    y = cjtreg1_id['preference']
    model = sm.OLS(y, X).fit()
    results.append(model)

for i, model in enumerate(results):
    id_ = cjtreg1['ID'].unique()[i]
    print(f"ID: {id_}")
    print(model.summary())
    print("====================================")

results = []
coefficients = pd.DataFrame(columns=['ID', 'Intercept', 'weight_5kg', 'weight_10kg','size_small', 'size_middle',  'size_royal', 'usage_gift', 'price_13000', 'price_16000', 'price_26000'])
for id_ in cjtreg1['ID'].unique():
    cjtreg1_id = cjtreg1[cjtreg1['ID'] == id_]
    X = sm.add_constant(cjtreg1_id[['weight_5kg', 'weight_10kg','size_small', 'size_middle',  'size_royal', 'usage_gift', 'price_13000', 'price_16000', 'price_26000']])
    y = cjtreg1_id['preference']
    model = sm.OLS(y, X).fit()
    results.append(model)

    coef = [id_] + model.params.tolist()
    coefficients = coefficients.append(pd.Series(coef, index=coefficients.columns), ignore_index=True)

print(coefficients)

coefficients_mean = coefficients.mean().round(2)

print(coefficients_mean)

import numpy as np
import matplotlib.pyplot as plt
plt.rcParams['font.family'] = 'NanumGothic'
plt.rcParams['axes.unicode_minus'] = False

group1_reference_coefficient = 0
group1_coefficient_1 = 2.52
group1_coefficient_2 = 3.49
group1_attribute_levels = ['weight_3kg','weight_5kg', 'weight_10kg']
group1_attribute_utilities = ([group1_reference_coefficient, group1_coefficient_1,group1_coefficient_2])

fig, (ax1) = plt.subplots(1, figsize=(5, 5))

ax1.plot(group1_attribute_utilities, marker='o')
ax1.set_xticks(np.arange(len(group1_attribute_levels)))
ax1.set_xticklabels(group1_attribute_levels)
ax1.set_xlabel('Weight')
ax1.set_ylabel('Utility')
ax1.set_title('Utility of Weight')

ax1.set_ylim(0, 5)

plt.tight_layout()
plt.show()





group1_reference_coefficient = 0
group1_coefficient_1 = 0.56
group1_coefficient_2 = 3.24
group1_coefficient_3 = 4.86
group1_attribute_levels = ['size_small','size_middle', 'size_big', 'size_royal']
group1_attribute_utilities = ([ group1_coefficient_1,group1_coefficient_2, group1_reference_coefficient,group1_coefficient_3])

fig, (ax1) = plt.subplots(1, figsize=(5, 5))

ax1.plot(group1_attribute_utilities, marker='o')
ax1.set_xticks(np.arange(len(group1_attribute_levels)))
ax1.set_xticklabels(group1_attribute_levels)
ax1.set_xlabel('Size')
ax1.set_ylabel('Utility')
ax1.set_title('Utility of Size')

ax1.set_ylim(0, 5)

plt.tight_layout()
plt.show()

group1_reference_coefficient = 0
group1_coefficient_1 = 0.47
group1_attribute_levels = ['usage_family','usage_gift']
group1_attribute_utilities = ([group1_reference_coefficient, group1_coefficient_1])

fig, (ax1) = plt.subplots(1, figsize=(5, 5))

ax1.plot(group1_attribute_utilities, marker='o')
ax1.set_xticks(np.arange(len(group1_attribute_levels)))
ax1.set_xticklabels(group1_attribute_levels)
ax1.set_xlabel('Usage')
ax1.set_ylabel('Utility')
ax1.set_title('Utility of Usage')

ax1.set_ylim(0, 5)

plt.tight_layout()
plt.show()

group1_reference_coefficient = 0
group1_coefficient_1 = 2.87
group1_coefficient_2 = 3.12
group1_coefficient_3 = 0.23
group1_attribute_levels = ['price_13000','price_16000', 'price_26000', 'price_30000']
group1_attribute_utilities = ([ group1_coefficient_1,group1_coefficient_2,group1_coefficient_3, group1_reference_coefficient])

fig, (ax1) = plt.subplots(1, figsize=(5, 5))

ax1.plot(group1_attribute_utilities, marker='o')
ax1.set_xticks(np.arange(len(group1_attribute_levels)))
ax1.set_xticklabels(group1_attribute_levels)
ax1.set_xlabel('Price')
ax1.set_ylabel('Utility')
ax1.set_title('Utility of Price')

ax1.set_ylim(0, 5)

plt.tight_layout()
plt.show()